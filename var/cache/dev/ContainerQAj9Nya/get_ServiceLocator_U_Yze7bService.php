<?php

namespace ContainerQAj9Nya;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_U_Yze7bService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.U.yze7b' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.U.yze7b'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'anecdotesRepository' => ['privates', '.errored.jFRTsaF', NULL, 'Cannot determine controller argument for "App\\Controller\\FindController::corporation()": the $anecdotesRepository argument is type-hinted with the non-existent class or interface: "App\\Repository\\AnecdotesRepository".'],
            'chantRepository' => ['privates', '.errored.PKYWjeJ', NULL, 'Cannot determine controller argument for "App\\Controller\\FindController::corporation()": the $chantRepository argument is type-hinted with the non-existent class or interface: "App\\Repository\\ChantRepository".'],
            'corporation' => ['privates', '.errored.v.P2IT7', NULL, 'Cannot determine controller argument for "App\\Controller\\FindController::corporation()": the $corporation argument is type-hinted with the non-existent class or interface: "App\\Entity\\Corporations".'],
            'croixRepository' => ['privates', '.errored.2_aqNv0', NULL, 'Cannot determine controller argument for "App\\Controller\\FindController::corporation()": the $croixRepository argument is type-hinted with the non-existent class or interface: "App\\Repository\\CroixRepository".'],
            'decorumRepository' => ['privates', '.errored.el0U.9O', NULL, 'Cannot determine controller argument for "App\\Controller\\FindController::corporation()": the $decorumRepository argument is type-hinted with the non-existent class or interface: "App\\Repository\\DecorumRepository".'],
            'particularitesRepository' => ['privates', '.errored.3TUkKfX', NULL, 'Cannot determine controller argument for "App\\Controller\\FindController::corporation()": the $particularitesRepository argument is type-hinted with the non-existent class or interface: "App\\Repository\\ParticularitesRepository".'],
            'pinsRepository' => ['privates', '.errored.jQi6e0W', NULL, 'Cannot determine controller argument for "App\\Controller\\FindController::corporation()": the $pinsRepository argument is type-hinted with the non-existent class or interface: "App\\Repository\\PinsRepository".'],
        ], [
            'anecdotesRepository' => '?',
            'chantRepository' => '?',
            'corporation' => '?',
            'croixRepository' => '?',
            'decorumRepository' => '?',
            'particularitesRepository' => '?',
            'pinsRepository' => '?',
        ]);
    }
}
